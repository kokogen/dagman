"""init

Revision ID: 3243bf18c645
Revises: 
Create Date: 2024-02-07 11:29:12.569133

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3243bf18c645'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('params', postgresql.ARRAY(sa.String()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='dagman'
    )
    op.create_table('node',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('node_type', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='dagman'
    )
    op.create_table('dag_operation',
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('dag_id', sa.Integer(), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.Column('params', postgresql.ARRAY(sa.String()), nullable=False),
    sa.ForeignKeyConstraint(['dag_id'], ['dagman.dag.id'], ),
    sa.ForeignKeyConstraint(['node_id'], ['dagman.node.id'], ),
    sa.PrimaryKeyConstraint('node_id'),
    schema='dagman'
    )
    op.create_table('dataversion',
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('entity_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['dagman.node.id'], ),
    sa.PrimaryKeyConstraint('node_id'),
    schema='dagman'
    )
    op.create_table('edge',
    sa.Column('left_id', sa.Integer(), nullable=False),
    sa.Column('right_id', sa.Integer(), nullable=False),
    sa.Column('shift', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['left_id'], ['dagman.node.id'], ),
    sa.ForeignKeyConstraint(['right_id'], ['dagman.node.id'], ),
    sa.PrimaryKeyConstraint('left_id', 'right_id'),
    schema='dagman'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('edge', schema='dagman')
    op.drop_table('dataversion', schema='dagman')
    op.drop_table('dag_operation', schema='dagman')
    op.drop_table('node', schema='dagman')
    op.drop_table('dag', schema='dagman')
    # ### end Alembic commands ###
